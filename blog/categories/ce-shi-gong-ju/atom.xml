<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 测试工具 | qiuhm blog]]></title>
  <link href="http://qiuhm.github.io/blog/categories/ce-shi-gong-ju/atom.xml" rel="self"/>
  <link href="http://qiuhm.github.io/"/>
  <updated>2015-12-31T18:04:02+08:00</updated>
  <id>http://qiuhm.github.io/</id>
  <author>
    <name><![CDATA[qiuhm]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[利用facebook/infer工具扫描oc代码]]></title>
    <link href="http://qiuhm.github.io/blog/2015/12/31/li-yong-facebook-slash-infergong-ju-sao-miao-ocdai-ma/"/>
    <updated>2015-12-31T17:52:53+08:00</updated>
    <id>http://qiuhm.github.io/blog/2015/12/31/li-yong-facebook-slash-infergong-ju-sao-miao-ocdai-ma</id>
    <content type="html"><![CDATA[<blockquote><p>最近在研究facebook的开源工具infer，它是一个静态扫描工具，可以分析 Objective-C， Java 或者 C 代码，我按照官方说明在本地进行了安装，遇到了很多环境的问题，把安装说明详细的记录下来，供大家参考。</p>

<h3>一、安装依赖</h3>

<p>需要安装如下依赖：</p></blockquote>

<pre><code>- opam &gt;= 1.2.0 
- Python 2.7
- Java (only needed for the Java analysis)
- clang in Xcode command line tools. You can install them with the command：xcode-select --install
(only needed for the C/Objective-C analysis)
- Xcode &gt;= 6.1 (only needed for the C/Objective-C analysis)
- autoconf &gt;= 2.63 and automake &gt;= 1.11.1 (if building from git)
</code></pre>

<blockquote><p>我是macx os环境，基本是用homebrew工具安装依赖的，建议大家使用该工具，省去了一系列配置环境变量的事。</p>

<h3>二、下载安装预编译包</h3>

<h4>1.下载</h4>

<p>该预编译包包含clang and facebook-clang-plugins，减少自己编译clang和facebook-clang-plugins的时间。
<a href="https://github.com/facebook/infer/releases">下载链接</a>
建议下载最新的包，格式为infer-osx-v0.5.0.tar.xz，解压后存到你想要放置的目录（我放在~/libtool）</p>

<h4>2.设置环境变量</h4>

<p>将/~/libtool/infer/infer/bin加到环境变量里
<code>
sudo vi /etc/profile
</code>
<code>
INFER_HOME=/～/libtool/infer/infer
PATH=$INFER_HOME/bin:$PATH
</code>
将~替换成你的主目录路径</p>

<h4>3.build infer</h4>

<pre><code>cd /～/libtool/infer
./build-infer.sh
</code></pre>

<p>大概等1分钟左右，没有报错的话，则infer安装完成。如果有报错，可能是少了某些依赖，需要根据补全相关的依赖，再重新build infer。</p>

<h3>三、运行example</h3>

<h4>1.分析单个文件</h4>

<pre><code>cd /～/libtool/infer/examples/ios_hello/HelloWorldApp
infer -- clang -c Hello.m
</code></pre>

<p>执行结果如下：
<img src="../blogpic/infer/single.jpg" alt="单个文件的扫描结果" /></p>

<h4>2.分析整个项目（本人做iOS的，以iOS为例）</h4>

<pre><code>cd /~/libtool/infer/examples/ios_hello
xcodebuild -target HelloWorldApp -configuration Debug -sdk iphonesimulator clean
infer -- xcodebuild -target HelloWorldApp -configuration Debug -sdk iphonesimulator
</code></pre>

<p>执行结果如下：
<img src="../blogpic/infer/project.jpg" alt="项目的扫描结果" /></p>

<h3>四、执行inferTraceBugs查看问题</h3>

<p>切换到存在infer-out目录的文件夹，执行
<code>
inferTraceBugs --html
</code>
点击打开生成的html，大致如图
<img src="../blogpic/infer/html.jpg" alt="html报告" /></p>

<p>附录</p>

<blockquote><p>1.<a href="http://fbinfer.com/">infer详细介绍</a>
2.<a href="https://github.com/facebook/infer">facebook/infer源码</a></p></blockquote></blockquote>
]]></content>
  </entry>
  
</feed>
